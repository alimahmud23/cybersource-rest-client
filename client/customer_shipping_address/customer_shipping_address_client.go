// Code generated by go-swagger; DO NOT EDIT.

package customer_shipping_address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new customer shipping address API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for customer shipping address API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteCustomerShippingAddress(params *DeleteCustomerShippingAddressParams, opts ...ClientOption) (*DeleteCustomerShippingAddressNoContent, error)

	GetCustomerShippingAddress(params *GetCustomerShippingAddressParams, opts ...ClientOption) (*GetCustomerShippingAddressOK, error)

	GetCustomerShippingAddressesList(params *GetCustomerShippingAddressesListParams, opts ...ClientOption) (*GetCustomerShippingAddressesListOK, error)

	PatchCustomersShippingAddress(params *PatchCustomersShippingAddressParams, opts ...ClientOption) (*PatchCustomersShippingAddressOK, error)

	PostCustomerShippingAddress(params *PostCustomerShippingAddressParams, opts ...ClientOption) (*PostCustomerShippingAddressCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteCustomerShippingAddress deletes a customer shipping address
*/
func (a *Client) DeleteCustomerShippingAddress(params *DeleteCustomerShippingAddressParams, opts ...ClientOption) (*DeleteCustomerShippingAddressNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCustomerShippingAddressParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteCustomerShippingAddress",
		Method:             "DELETE",
		PathPattern:        "/tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}",
		ProducesMediaTypes: []string{"application/json;charset=utf-8"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCustomerShippingAddressReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCustomerShippingAddressNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteCustomerShippingAddress: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCustomerShippingAddress retrieves a customer shipping address
*/
func (a *Client) GetCustomerShippingAddress(params *GetCustomerShippingAddressParams, opts ...ClientOption) (*GetCustomerShippingAddressOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCustomerShippingAddressParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getCustomerShippingAddress",
		Method:             "GET",
		PathPattern:        "/tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}",
		ProducesMediaTypes: []string{"application/json;charset=utf-8"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCustomerShippingAddressReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCustomerShippingAddressOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCustomerShippingAddress: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCustomerShippingAddressesList lists shipping addresses for a customer
*/
func (a *Client) GetCustomerShippingAddressesList(params *GetCustomerShippingAddressesListParams, opts ...ClientOption) (*GetCustomerShippingAddressesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCustomerShippingAddressesListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getCustomerShippingAddressesList",
		Method:             "GET",
		PathPattern:        "/tms/v2/customers/{customerTokenId}/shipping-addresses",
		ProducesMediaTypes: []string{"application/json;charset=utf-8"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCustomerShippingAddressesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCustomerShippingAddressesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCustomerShippingAddressesList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchCustomersShippingAddress updates a customer shipping address
*/
func (a *Client) PatchCustomersShippingAddress(params *PatchCustomersShippingAddressParams, opts ...ClientOption) (*PatchCustomersShippingAddressOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchCustomersShippingAddressParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "patchCustomersShippingAddress",
		Method:             "PATCH",
		PathPattern:        "/tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}",
		ProducesMediaTypes: []string{"application/json;charset=utf-8"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchCustomersShippingAddressReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchCustomersShippingAddressOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchCustomersShippingAddress: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostCustomerShippingAddress creates a customer shipping address

  Include an existing TMS Customer token id in the request URI.
* A Customer token can be created by calling: **POST [*]/tms/v2/customers***

*/
func (a *Client) PostCustomerShippingAddress(params *PostCustomerShippingAddressParams, opts ...ClientOption) (*PostCustomerShippingAddressCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostCustomerShippingAddressParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postCustomerShippingAddress",
		Method:             "POST",
		PathPattern:        "/tms/v2/customers/{customerTokenId}/shipping-addresses",
		ProducesMediaTypes: []string{"application/json;charset=utf-8"},
		ConsumesMediaTypes: []string{"application/json;charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostCustomerShippingAddressReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostCustomerShippingAddressCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postCustomerShippingAddress: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
