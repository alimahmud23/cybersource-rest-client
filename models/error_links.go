// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ErrorLinks error links
//
// swagger:model ErrorLinks
type ErrorLinks struct {

	// documentation
	Documentation []*ErrorLinksDocumentationItems0 `json:"documentation"`

	// next
	Next []*ErrorLinksNextItems0 `json:"next"`

	// self
	Self *ErrorLinksSelf `json:"self,omitempty"`
}

// Validate validates this error links
func (m *ErrorLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocumentation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ErrorLinks) validateDocumentation(formats strfmt.Registry) error {

	if swag.IsZero(m.Documentation) { // not required
		return nil
	}

	for i := 0; i < len(m.Documentation); i++ {
		if swag.IsZero(m.Documentation[i]) { // not required
			continue
		}

		if m.Documentation[i] != nil {
			if err := m.Documentation[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("documentation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ErrorLinks) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(m.Next) { // not required
		return nil
	}

	for i := 0; i < len(m.Next); i++ {
		if swag.IsZero(m.Next[i]) { // not required
			continue
		}

		if m.Next[i] != nil {
			if err := m.Next[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("next" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ErrorLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if m.Self != nil {
		if err := m.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ErrorLinks) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErrorLinks) UnmarshalBinary(b []byte) error {
	var res ErrorLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ErrorLinksDocumentationItems0 error links documentation items0
//
// swagger:model ErrorLinksDocumentationItems0
type ErrorLinksDocumentationItems0 struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this error links documentation items0
func (m *ErrorLinksDocumentationItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ErrorLinksDocumentationItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErrorLinksDocumentationItems0) UnmarshalBinary(b []byte) error {
	var res ErrorLinksDocumentationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ErrorLinksNextItems0 error links next items0
//
// swagger:model ErrorLinksNextItems0
type ErrorLinksNextItems0 struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this error links next items0
func (m *ErrorLinksNextItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ErrorLinksNextItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErrorLinksNextItems0) UnmarshalBinary(b []byte) error {
	var res ErrorLinksNextItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ErrorLinksSelf error links self
//
// swagger:model ErrorLinksSelf
type ErrorLinksSelf struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this error links self
func (m *ErrorLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ErrorLinksSelf) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErrorLinksSelf) UnmarshalBinary(b []byte) error {
	var res ErrorLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
